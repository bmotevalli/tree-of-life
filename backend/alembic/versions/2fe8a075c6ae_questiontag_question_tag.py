"""questiontag -> question_tag.

Revision ID: 2fe8a075c6ae
Revises: 24e75e3f8179
Create Date: 2025-06-05 03:45:00.313845

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2fe8a075c6ae'
down_revision: Union[str, None] = '24e75e3f8179'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('questiontag')
    op.drop_constraint(op.f('question_tag_association_tag_id_fkey'), 'question_tag_association', type_='foreignkey')
    op.create_foreign_key(None, 'question_tag_association', 'question_tag', ['tag_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'question_tag_association', type_='foreignkey')
    op.create_foreign_key(op.f('question_tag_association_tag_id_fkey'), 'question_tag_association', 'questiontag', ['tag_id'], ['id'])
    op.create_table('questiontag',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], name=op.f('questiontag_created_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['user.id'], name=op.f('questiontag_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('questiontag_pkey')),
    sa.UniqueConstraint('name', name=op.f('questiontag_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
